"use strict";require("core-js/modules/es.promise"),require("core-js/modules/es.regexp.to-string"),require("core-js/modules/es.string.replace"),require("core-js/modules/web.dom-collections.iterator"),require("core-js/modules/web.url"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.workerlog=void 0;const defaultUrl="https://stage-api.workerlog.dev/log",usernameRegEx=/^[0-9A-Fa-f]{40}$/,projectRegEx=/^[0-9A-Fa-f]{7}$/,hostnane="workerlog.dev";// global variable to keep track of fetch event
let _event,_dsn,_url;const workerlog={init:function init(a,b){let c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:defaultUrl;if(!a||"fetch"!==a.type)throw"fetch event is required";_dsn=new Dsn(b),_url=new URL(c),_event=a},log:function log(){if(!_event||"fetch"!=_event.type)throw"fetch event is require. please setup fetch event using init().";_event.waitUntil(sendlog(...arguments))},createDsn:a=>new Dsn(a)};exports.workerlog=workerlog;const sendlog=function(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];const d=JSON.stringify({dsn:_dsn.toString(),ts:new Date().toISOString(),msg:b});return fetch(_url.toString(),{method:"POST",headers:{"User-Agent":"Workerlog/1.0","Content-Type":"application/json"},body:d})},Dsn=class{constructor(a){const b=new URL(a);if(this._username=b.username,this._hostname=b.hostname,this._project=b.pathname.replace(/^\//,""),!this.isValid())throw"invalid dsn"}toString(){return"https://".concat(this._username,"@").concat(this._hostname,"/").concat(this._project)}isValid(){return usernameRegEx.test(this._username)&&projectRegEx.test(this._project)&&hostnane===this._hostname}};