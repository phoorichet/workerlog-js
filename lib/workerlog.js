"use strict";require("core-js/modules/es.promise"),require("core-js/modules/es.regexp.to-string"),require("core-js/modules/es.string.replace"),require("core-js/modules/web.dom-collections.iterator"),require("core-js/modules/web.url"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.Worker=exports.Dsn=void 0;const defaultUrl="https://stage-api.workerlog.dev/log",usernameRegEx=/^[0-9A-Fa-f]{40}$/,projectRegEx=/^[0-9A-Fa-f]{7}$/,hostnane="workerlog.dev",Dsn=class{constructor(a){const b=new URL(a);if(this._username=b.username,this._hostname=b.hostname,this._project=b.pathname.replace(/^\//,""),!this.isValid())throw"Invalid dns"}toString(){return"https://".concat(this._username,"@").concat(this._hostname,"/").concat(this._project)}isValid(){return usernameRegEx.test(this._username)&&projectRegEx.test(this._project)&&hostnane===this._hostname}};exports.Dsn=Dsn;const Worker=class{constructor(a){let b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:defaultUrl;this._dsn=new Dsn(a),this._url=new URL(b)}async log(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];console.log("".concat(new Date().toISOString()," [").concat(this._dsn,"]"),...b);const d=JSON.stringify({dsn:this._dsn.toString(),ts:new Date().toISOString(),msg:b});return fetch(this._url.toString(),{method:"POST",headers:{"User-Agent":"Workerlog/1.0","Content-Type":"application/json"},body:d})}};exports.Worker=Worker;